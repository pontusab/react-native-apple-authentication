{"version":3,"file":"AppleAuthentication.js","sourceRoot":"","sources":["../src/AppleAuthentication.ts"],"names":[],"mappings":"AAAA,OAAO,qBAAqB,MAAM,yBAAyB,CAAC;AAC5D,OAAO,EAML,4BAA4B,EAE7B,MAAM,6BAA6B,CAAC;AAErC,MAAM,CAAC,KAAK,UAAU,gBAAgB;IACpC,IAAI,CAAC,qBAAqB,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE;QACrE,OAAO,KAAK,CAAC;KACd;IACD,OAAO,qBAAqB,CAAC,gBAAgB,EAAE,CAAC;AAClD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,WAAW,CAC/B,OAA0C;IAE1C,IAAI,CAAC,qBAAqB,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE;QACjE,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,aAAa,CAAC,CAAC;KACzD;IACD,MAAM,cAAc,GAAG;QACrB,GAAG,OAAO;QACV,kBAAkB,EAAE,4BAA4B,CAAC,KAAK;KACvD,CAAC;IACF,MAAM,UAAU,GAAG,MAAM,qBAAqB,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;IAC5E,IACE,CAAC,UAAU,CAAC,iBAAiB;QAC7B,CAAC,UAAU,CAAC,aAAa;QACzB,CAAC,UAAU,CAAC,IAAI,EAChB;QACA,OAAO,CAAC,GAAG,CACT,yCAAyC,EACzC,kFAAkF,CACnF,CAAC;KACH;IACD,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,YAAY,CAChC,OAA0C;IAE1C,IAAI,CAAC,qBAAqB,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE;QACjE,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,cAAc,CAAC,CAAC;KAC1D;IACD,MAAM,cAAc,GAAG;QACrB,GAAG,OAAO;QACV,kBAAkB,EAAE,4BAA4B,CAAC,OAAO;KACzD,CAAC;IACF,MAAM,UAAU,GAAG,MAAM,qBAAqB,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;IAC5E,IACE,CAAC,UAAU,CAAC,iBAAiB;QAC7B,CAAC,UAAU,CAAC,aAAa;QACzB,CAAC,UAAU,CAAC,IAAI,EAChB;QACA,OAAO,CAAC,GAAG,CACT,yCAAyC,EACzC,mFAAmF,CACpF,CAAC;KACH;IACD,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,YAAY,CAChC,OAA0C;IAE1C,IAAI,CAAC,qBAAqB,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE;QACjE,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,cAAc,CAAC,CAAC;KAC1D;IACD,MAAM,cAAc,GAAG;QACrB,GAAG,OAAO;QACV,kBAAkB,EAAE,4BAA4B,CAAC,MAAM;KACxD,CAAC;IACF,OAAO,qBAAqB,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;AAC5D,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAC3C,IAAY;IAEZ,IACE,CAAC,qBAAqB;QACtB,CAAC,qBAAqB,CAAC,uBAAuB,EAC9C;QACA,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;KACrE;IACD,OAAO,qBAAqB,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;AAC7D,CAAC;AAED,8DAA8D;AAC9D,0BAA0B;AAC1B,KAAK;AAEL,qCAAqC;AACrC,gDAAgD;AAChD,oBAAoB;AACpB,6DAA6D;AAC7D,qCAAqC;AACrC,kBAAkB;AAClB,UAAU;AACV,IAAI","sourcesContent":["import RNAppleAuthentication from './RNAppleAuthentication';\nimport {\n  AppleAuthenticationSignInOptions,\n  AppleAuthenticationRefreshOptions,\n  AppleAuthenticationSignOutOptions,\n  AppleAuthenticationCredential,\n  AppleAuthenticationCredentialState,\n  AppleAuthenticationOperation,\n  AppleAuthenticationRevokeListener\n} from './AppleAuthentication.types';\n\nexport async function isAvailableAsync(): Promise<boolean> {\n  if (!RNAppleAuthentication || !RNAppleAuthentication.isAvailableAsync) {\n    return false;\n  }\n  return RNAppleAuthentication.isAvailableAsync();\n}\n\nexport async function signInAsync(\n  options?: AppleAuthenticationSignInOptions\n): Promise<AppleAuthenticationCredential> {\n  if (!RNAppleAuthentication || !RNAppleAuthentication.requestAsync) {\n    console.log('expo-apple-authentication', 'signInAsync');\n  }\n  const requestOptions = {\n    ...options,\n    requestedOperation: AppleAuthenticationOperation.LOGIN\n  };\n  const credential = await RNAppleAuthentication.requestAsync(requestOptions);\n  if (\n    !credential.authorizationCode ||\n    !credential.identityToken ||\n    !credential.user\n  ) {\n    console.log(\n      'ERR_APPLE_AUTHENTICATION_REQUEST_FAILED',\n      'The credential returned by `signInAsync` is missing one or more required fields.'\n    );\n  }\n  return credential;\n}\n\nexport async function refreshAsync(\n  options: AppleAuthenticationRefreshOptions\n): Promise<AppleAuthenticationCredential> {\n  if (!RNAppleAuthentication || !RNAppleAuthentication.requestAsync) {\n    console.log('expo-apple-authentication', 'refreshAsync');\n  }\n  const requestOptions = {\n    ...options,\n    requestedOperation: AppleAuthenticationOperation.REFRESH\n  };\n  const credential = await RNAppleAuthentication.requestAsync(requestOptions);\n  if (\n    !credential.authorizationCode ||\n    !credential.identityToken ||\n    !credential.user\n  ) {\n    console.log(\n      'ERR_APPLE_AUTHENTICATION_REQUEST_FAILED',\n      'The credential returned by `refreshAsync` is missing one or more required fields.'\n    );\n  }\n  return credential;\n}\n\nexport async function signOutAsync(\n  options: AppleAuthenticationSignOutOptions\n): Promise<AppleAuthenticationCredential> {\n  if (!RNAppleAuthentication || !RNAppleAuthentication.requestAsync) {\n    console.log('expo-apple-authentication', 'signOutAsync');\n  }\n  const requestOptions = {\n    ...options,\n    requestedOperation: AppleAuthenticationOperation.LOGOUT\n  };\n  return RNAppleAuthentication.requestAsync(requestOptions);\n}\n\nexport async function getCredentialStateAsync(\n  user: string\n): Promise<AppleAuthenticationCredentialState> {\n  if (\n    !RNAppleAuthentication ||\n    !RNAppleAuthentication.getCredentialStateAsync\n  ) {\n    console.log('expo-apple-authentication', 'getCredentialStateAsync');\n  }\n  return RNAppleAuthentication.getCredentialStateAsync(user);\n}\n\n// const RNAppleAuthenticationEventEmitter = new EventEmitter(\n//   RNAppleAuthentication\n// );\n\n// export function addRevokeListener(\n//   listener: AppleAuthenticationRevokeListener\n// ): Subscription {\n//   // return RNAppleAuthenticationEventEmitter.addListener(\n//   //   'appleIdCredentialRevoked',\n//   //   listener\n//   // );\n// }\n"]}